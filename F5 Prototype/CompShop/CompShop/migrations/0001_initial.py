# Generated by Django 4.1.6 on 2023-02-16 17:48

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DeliveryFirm',
            fields=[
                ('deliveryfirmid', models.AutoField(primary_key=True, serialize=False)),
                ('address', models.CharField(blank=True, max_length=100, null=True)),
                ('nameofdeliveryfirm', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Delivery Firms',
                'db_table': 'delivery_firm',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Manufacturer',
            fields=[
                ('manufacturerid', models.AutoField(primary_key=True, serialize=False)),
                ('nameofmanufacturer', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Manufacturers',
                'db_table': 'manufacturer',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('productid', models.AutoField(primary_key=True, serialize=False)),
                ('nameofproduct', models.CharField(max_length=100)),
                ('manufacturerid', models.ForeignKey(db_column='manufacturerid', on_delete=django.db.models.deletion.DO_NOTHING, to='CompShop.manufacturer')),
            ],
            options={
                'verbose_name_plural': 'Products',
                'db_table': 'product',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('userid', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.TextField(max_length=255, unique=True)),
                ('password', models.TextField(max_length=255)),
                ('nameofuser', models.TextField(max_length=255)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('last_login', models.DateTimeField(auto_now=True, verbose_name='last login')),
            ],
            options={
                'verbose_name_plural': 'Users',
                'db_table': 'users',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Admins',
            fields=[
                ('userid', models.OneToOneField(db_column='userid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('typeofadmin', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name_plural': 'Admins',
                'db_table': 'admins',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('userid', models.OneToOneField(db_column='userid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('phonenumber', models.CharField(max_length=50)),
                ('address', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Customers',
                'db_table': 'customer',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DeliveryAgent',
            fields=[
                ('deliveryagentid', models.AutoField(primary_key=True, serialize=False)),
                ('nameofdeliveryagent', models.CharField(blank=True, max_length=100, null=True)),
                ('deliveryfirmid', models.ForeignKey(db_column='deliveryfirmid', on_delete=django.db.models.deletion.DO_NOTHING, to='CompShop.deliveryfirm')),
            ],
            options={
                'verbose_name_plural': 'Delivery Agents',
                'db_table': 'delivery_agent',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('categoryid', models.AutoField(primary_key=True, serialize=False)),
                ('nameofcategory', models.CharField(max_length=50)),
                ('subcategoryof', models.ForeignKey(blank=True, db_column='subcategoryof', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='CompShop.category')),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'db_table': 'category',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='StockOrder',
            fields=[
                ('stockorderid', models.AutoField(primary_key=True, serialize=False)),
                ('orderdate', models.DateField()),
                ('manufacturerid', models.ForeignKey(db_column='manufacturerid', on_delete=django.db.models.deletion.DO_NOTHING, to='CompShop.manufacturer')),
                ('adminid', models.ForeignKey(db_column='adminid', on_delete=django.db.models.deletion.DO_NOTHING, to='CompShop.admins')),
            ],
            options={
                'verbose_name_plural': 'Stock Orders',
                'db_table': 'stock_order',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ShoppingCart',
            fields=[
                ('scid', models.AutoField(primary_key=True, serialize=False)),
                ('customerid', models.ForeignKey(db_column='customerid', on_delete=django.db.models.deletion.DO_NOTHING, to='CompShop.customer')),
            ],
            options={
                'verbose_name_plural': 'Shopping Carts',
                'db_table': 'shopping_cart',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('code', models.CharField(max_length=16, primary_key=True, serialize=False)),
                ('startdate', models.DateField()),
                ('enddate', models.DateField(blank=True, null=True)),
                ('percentage', models.IntegerField()),
                ('adminid', models.ForeignKey(db_column='adminid', on_delete=django.db.models.deletion.DO_NOTHING, to='CompShop.admins')),
            ],
            options={
                'verbose_name_plural': 'Promotions',
                'db_table': 'promotion',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ProductImages',
            fields=[
                ('productid', models.OneToOneField(db_column='productid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='CompShop.product')),
                ('images', models.CharField(max_length=10000)),
            ],
            options={
                'verbose_name_plural': 'Product Images',
                'db_table': 'product_images',
                'managed': True,
                'unique_together': {('productid', 'images')},
            },
        ),
        migrations.AddField(
            model_name='product',
            name='adminid',
            field=models.ForeignKey(db_column='adminid', on_delete=django.db.models.deletion.DO_NOTHING, to='CompShop.admins'),
        ),
        migrations.CreateModel(
            name='Price',
            fields=[
                ('productid', models.OneToOneField(db_column='productid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='CompShop.product')),
                ('startdate', models.DateField()),
                ('enddate', models.DateField(blank=True, null=True)),
                ('value', models.IntegerField()),
            ],
            options={
                'verbose_name_plural': 'Prices',
                'db_table': 'price',
                'managed': True,
                'unique_together': {('productid', 'startdate')},
            },
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('orderid', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.CharField(max_length=50)),
                ('dateoforder', models.DateTimeField()),
                ('totalprice', models.IntegerField()),
                ('code', models.ForeignKey(blank=True, db_column='code', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='CompShop.promotion')),
                ('deliveryfirmid', models.ForeignKey(blank=True, db_column='deliveryfirmid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='CompShop.deliveryfirm')),
                ('scid', models.ForeignKey(db_column='scid', on_delete=django.db.models.deletion.DO_NOTHING, to='CompShop.shoppingcart')),
                ('adminid', models.ForeignKey(blank=True, db_column='adminid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='CompShop.admins')),
                ('customerid', models.ForeignKey(db_column='customerid', on_delete=django.db.models.deletion.DO_NOTHING, to='CompShop.customer')),
            ],
            options={
                'verbose_name_plural': 'Orders',
                'db_table': 'orders',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Productisofcategory',
            fields=[
                ('productid', models.ForeignKey(db_column='productid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='CompShop.product')),
                ('categoryid', models.OneToOneField(db_column='categoryid', on_delete=django.db.models.deletion.DO_NOTHING, to='CompShop.category')),
            ],
            options={
                'verbose_name_plural': 'Productsareofcategories',
                'db_table': 'productisofcategory',
                'managed': True,
                'unique_together': {('categoryid', 'productid')},
            },
        ),
        migrations.CreateModel(
            name='Productisinsideso',
            fields=[
                ('quantity', models.IntegerField()),
                ('productid', models.OneToOneField(db_column='productid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='CompShop.product')),
                ('stockorderid', models.ForeignKey(db_column='stockorderid', on_delete=django.db.models.deletion.DO_NOTHING, to='CompShop.stockorder')),
            ],
            options={
                'verbose_name_plural': 'Productsareinsideso',
                'db_table': 'productisinsideso',
                'managed': True,
                'unique_together': {('productid', 'stockorderid')},
            },
        ),
        migrations.CreateModel(
            name='Productisinsc',
            fields=[
                ('quantity', models.IntegerField()),
                ('productid', models.OneToOneField(db_column='productid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='CompShop.product')),
                ('scid', models.ForeignKey(db_column='scid', on_delete=django.db.models.deletion.DO_NOTHING, to='CompShop.shoppingcart')),
            ],
            options={
                'verbose_name_plural': 'Productsareinsc',
                'db_table': 'productisinsc',
                'managed': True,
                'unique_together': {('productid', 'scid')},
            },
        ),
        migrations.CreateModel(
            name='Orderhasproduct',
            fields=[
                ('quantity', models.IntegerField()),
                ('orderid', models.OneToOneField(db_column='orderid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='CompShop.orders')),
                ('productid', models.ForeignKey(db_column='productid', on_delete=django.db.models.deletion.DO_NOTHING, to='CompShop.product')),
            ],
            options={
                'verbose_name_plural': 'Ordershaveproducts',
                'db_table': 'orderhasproduct',
                'managed': True,
                'unique_together': {('orderid', 'productid')},
            },
        ),
    ]
